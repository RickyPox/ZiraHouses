"use client";
import { AnimatePresence, motion } from "framer-motion";
import Link from "next/link";
import { useState } from "react";
import pages from "@/arrays/pages";
import AnimatedHamburgerButton from "@/components/menu";

export default function Navbar() {
    const [isOpen, setIsOpen] = useState(false);

    const [hoveredIndex, setHoveredIndex] = useState<number | null>(null);

    const handleIsOpen = () => {
        setIsOpen((prev) => !prev);
    };

    return (
        <div className="relative text-white z-30 flex">
            <div className="grid grid-cols-11 justify-start  absolute z-30 top-0 w-screen items-center">
                <div className="col-start-2 col-span-1 lg:flex hidden justify-between items-center ">
                    <Link
                        href="https://pin.it/tyZDt1SXf"
                        target="_blank"
                        rel="noopener noreferrer"
                    >
                        <svg
                            width="16"
                            height="20"
                            viewBox="0 0 16 20"
                            fill="none"
                            xmlns="http://www.w3.org/2000/svg"
                        >
                            <path
                                d="M8.04924 0.724426C4.00095 0.724426 0 3.2495 0 7.33613C0 9.93504 1.5625 11.4117 2.50947 11.4117C2.90009 11.4117 3.125 10.3928 3.125 10.1049C3.125 9.76153 2.18987 9.03059 2.18987 7.60193C2.18987 4.63386 4.60464 2.52963 7.72964 2.52963C10.4167 2.52963 12.4053 3.95829 12.4053 6.58304C12.4053 8.54329 11.5649 12.2202 8.84233 12.2202C7.85985 12.2202 7.01941 11.5557 7.01941 10.6032C7.01941 9.20779 8.06108 7.85665 8.06108 6.41691C8.06108 3.97306 4.35606 4.41605 4.35606 7.36936C4.35606 7.98955 4.43892 8.67619 4.73485 9.24101C4.19034 11.4338 3.07765 14.7009 3.07765 16.9602C3.07765 17.6579 3.18419 18.3446 3.25521 19.0423C3.38936 19.1826 3.32229 19.1678 3.52746 19.0977C5.5161 16.5504 5.44508 16.0521 6.3447 12.7185C6.83002 13.5824 8.08475 14.0475 9.07907 14.0475C13.2694 14.0475 15.1515 10.2267 15.1515 6.78239C15.1515 3.1166 11.7661 0.724426 8.04924 0.724426Z"
                                fill={`${isOpen ? "black" : "white"}`}
                            />
                        </svg>
                    </Link>
                    <Link
                        href="https://www.instagram.com/zira.houses?igsh=MXJidmV6Zm5xb2dnZw%3D%3D&utm_source=qr"
                        target="_blank"
                        rel="noopener noreferrer"
                    >
                        <svg
                            width="20"
                            height="20"
                            viewBox="0 0 20 20"
                            fill="none"
                            xmlns="http://www.w3.org/2000/svg"
                        >
                            <path
                                d="M10.0045 5.21304C7.16613 5.21304 4.87671 7.32218 4.87671 9.93702C4.87671 12.5519 7.16613 14.661 10.0045 14.661C12.8428 14.661 15.1322 12.5519 15.1322 9.93702C15.1322 7.32218 12.8428 5.21304 10.0045 5.21304ZM10.0045 13.0082C8.17026 13.0082 6.67076 11.6309 6.67076 9.93702C6.67076 8.24313 8.16579 6.86582 10.0045 6.86582C11.8431 6.86582 13.3382 8.24313 13.3382 9.93702C13.3382 11.6309 11.8387 13.0082 10.0045 13.0082ZM16.538 5.0198C16.538 5.6324 16.0025 6.12165 15.342 6.12165C14.677 6.12165 14.1459 5.62829 14.1459 5.0198C14.1459 4.41132 14.6815 3.91795 15.342 3.91795C16.0025 3.91795 16.538 4.41132 16.538 5.0198ZM19.9342 6.1381C19.8583 4.66211 19.4924 3.35469 18.3186 2.2775C17.1494 1.20032 15.7302 0.863186 14.1281 0.789181C12.4768 0.702841 7.52761 0.702841 5.87638 0.789181C4.2787 0.859074 2.85953 1.19621 1.68582 2.27339C0.512105 3.35058 0.150619 4.658 0.070289 6.13399C-0.0234297 7.6552 -0.0234297 12.2147 0.070289 13.7359C0.146156 15.2119 0.512105 16.5194 1.68582 17.5965C2.85953 18.6737 4.27424 19.0109 5.87638 19.0849C7.52761 19.1712 12.4768 19.1712 14.1281 19.0849C15.7302 19.015 17.1494 18.6778 18.3186 17.5965C19.4879 16.5194 19.8538 15.2119 19.9342 13.7359C20.0279 12.2147 20.0279 7.65931 19.9342 6.1381ZM17.801 15.3682C17.4529 16.174 16.779 16.7948 15.8998 17.1196C14.5833 17.6007 11.4593 17.4896 10.0045 17.4896C8.54959 17.4896 5.42118 17.5965 4.10912 17.1196C3.23441 16.7989 2.56053 16.1781 2.20797 15.3682C1.68582 14.1553 1.80631 11.2773 1.80631 9.93702C1.80631 8.59671 1.69028 5.71463 2.20797 4.50588C2.55606 3.70004 3.22994 3.07922 4.10912 2.75443C5.42564 2.27339 8.54959 2.3844 10.0045 2.3844C11.4593 2.3844 14.5877 2.2775 15.8998 2.75443C16.7745 3.07511 17.4484 3.69593 17.801 4.50588C18.3231 5.71874 18.2026 8.59671 18.2026 9.93702C18.2026 11.2773 18.3231 14.1594 17.801 15.3682Z"
                                fill={`${isOpen ? "black" : "white"}`}
                            />
                        </svg>
                    </Link>
                </div>
                <div className="col-start-3 col-span-7 flex justify-center">
                    <Link href="/">
                        <h1
                            className={`${
                                isOpen ? "text-black" : "text-white"
                            } uppercase sm:text-[48px] text-[30px]`}
                        >
                            ZIRA HOUSES
                        </h1>
                    </Link>
                </div>
                <div className="col-start-10  space-x-[50px]  items-center lg:flex hidden">
                    <p className={`${isOpen ? "text-black" : "text-white"}`}>
                        PT
                    </p>
                    <p className={`${isOpen ? "text-black" : "text-white"}`}>
                        ENG
                    </p>
                </div>
                <div className="lg:col-start-11 col-start-10 flex lg:justify-start">
                    <div>
                        <AnimatedHamburgerButton
                            active={isOpen}
                            setActive={setIsOpen}
                        />
                    </div>
                </div>
            </div>
            <AnimatePresence>
                {isOpen && (
                    <div className="">
                        <motion.div
                            initial={{ width: 0, backgroundColor: "none" }}
                            animate={{
                                width: "100%",
                                backgroundColor: "rgba(255,255,255,0.9",
                            }}
                            exit={{ width: 0 }}
                            className="grid gridLayout h-screen fixed top-0 right-0 z-20  pt-[300px]"
                        >
                            <div className="col-start-2 col-span-9 flex flex-col items-center space-y-[50px]">
                                <div className="flex space-x-[50px] lg:hidden">
                                    <p
                                        className={`${
                                            isOpen ? "text-black" : "text-white"
                                        }`}
                                    >
                                        PT
                                    </p>
                                    <p
                                        className={`${
                                            isOpen ? "text-black" : "text-white"
                                        }`}
                                    >
                                        ENG
                                    </p>
                                </div>
                                {pages.map((page, i) => (
                                    <Link
                                        key={i}
                                        href={page.href}
                                        onMouseEnter={() => setHoveredIndex(i)}
                                        onMouseLeave={() =>
                                            setHoveredIndex(null)
                                        }
                                        onClick={handleIsOpen}
                                    >
                                        <h2 className="text-black">
                                            {page.title}
                                        </h2>
                                        <motion.div
                                            className="h-[2px] bg-black"
                                            initial={{ width: 0 }}
                                            animate={{
                                                width:
                                                    hoveredIndex === i
                                                        ? "100%"
                                                        : 0,
                                            }}
                                            transition={{ duration: 0.3 }}
                                        />
                                    </Link>
                                ))}
                                <div className="flex lg:hidden space-x-[50px]">
                                    <Link href="#">
                                        <svg
                                            width="16"
                                            height="20"
                                            viewBox="0 0 16 20"
                                            fill="none"
                                            xmlns="http://www.w3.org/2000/svg"
                                        >
                                            <path
                                                d="M8.04924 0.724426C4.00095 0.724426 0 3.2495 0 7.33613C0 9.93504 1.5625 11.4117 2.50947 11.4117C2.90009 11.4117 3.125 10.3928 3.125 10.1049C3.125 9.76153 2.18987 9.03059 2.18987 7.60193C2.18987 4.63386 4.60464 2.52963 7.72964 2.52963C10.4167 2.52963 12.4053 3.95829 12.4053 6.58304C12.4053 8.54329 11.5649 12.2202 8.84233 12.2202C7.85985 12.2202 7.01941 11.5557 7.01941 10.6032C7.01941 9.20779 8.06108 7.85665 8.06108 6.41691C8.06108 3.97306 4.35606 4.41605 4.35606 7.36936C4.35606 7.98955 4.43892 8.67619 4.73485 9.24101C4.19034 11.4338 3.07765 14.7009 3.07765 16.9602C3.07765 17.6579 3.18419 18.3446 3.25521 19.0423C3.38936 19.1826 3.32229 19.1678 3.52746 19.0977C5.5161 16.5504 5.44508 16.0521 6.3447 12.7185C6.83002 13.5824 8.08475 14.0475 9.07907 14.0475C13.2694 14.0475 15.1515 10.2267 15.1515 6.78239C15.1515 3.1166 11.7661 0.724426 8.04924 0.724426Z"
                                                fill={`${
                                                    isOpen ? "black" : "white"
                                                }`}
                                            />
                                        </svg>
                                    </Link>
                                    <Link href="#">
                                        <svg
                                            width="20"
                                            height="20"
                                            viewBox="0 0 20 20"
                                            fill="none"
                                            xmlns="http://www.w3.org/2000/svg"
                                        >
                                            <path
                                                d="M10.0045 5.21304C7.16613 5.21304 4.87671 7.32218 4.87671 9.93702C4.87671 12.5519 7.16613 14.661 10.0045 14.661C12.8428 14.661 15.1322 12.5519 15.1322 9.93702C15.1322 7.32218 12.8428 5.21304 10.0045 5.21304ZM10.0045 13.0082C8.17026 13.0082 6.67076 11.6309 6.67076 9.93702C6.67076 8.24313 8.16579 6.86582 10.0045 6.86582C11.8431 6.86582 13.3382 8.24313 13.3382 9.93702C13.3382 11.6309 11.8387 13.0082 10.0045 13.0082ZM16.538 5.0198C16.538 5.6324 16.0025 6.12165 15.342 6.12165C14.677 6.12165 14.1459 5.62829 14.1459 5.0198C14.1459 4.41132 14.6815 3.91795 15.342 3.91795C16.0025 3.91795 16.538 4.41132 16.538 5.0198ZM19.9342 6.1381C19.8583 4.66211 19.4924 3.35469 18.3186 2.2775C17.1494 1.20032 15.7302 0.863186 14.1281 0.789181C12.4768 0.702841 7.52761 0.702841 5.87638 0.789181C4.2787 0.859074 2.85953 1.19621 1.68582 2.27339C0.512105 3.35058 0.150619 4.658 0.070289 6.13399C-0.0234297 7.6552 -0.0234297 12.2147 0.070289 13.7359C0.146156 15.2119 0.512105 16.5194 1.68582 17.5965C2.85953 18.6737 4.27424 19.0109 5.87638 19.0849C7.52761 19.1712 12.4768 19.1712 14.1281 19.0849C15.7302 19.015 17.1494 18.6778 18.3186 17.5965C19.4879 16.5194 19.8538 15.2119 19.9342 13.7359C20.0279 12.2147 20.0279 7.65931 19.9342 6.1381ZM17.801 15.3682C17.4529 16.174 16.779 16.7948 15.8998 17.1196C14.5833 17.6007 11.4593 17.4896 10.0045 17.4896C8.54959 17.4896 5.42118 17.5965 4.10912 17.1196C3.23441 16.7989 2.56053 16.1781 2.20797 15.3682C1.68582 14.1553 1.80631 11.2773 1.80631 9.93702C1.80631 8.59671 1.69028 5.71463 2.20797 4.50588C2.55606 3.70004 3.22994 3.07922 4.10912 2.75443C5.42564 2.27339 8.54959 2.3844 10.0045 2.3844C11.4593 2.3844 14.5877 2.2775 15.8998 2.75443C16.7745 3.07511 17.4484 3.69593 17.801 4.50588C18.3231 5.71874 18.2026 8.59671 18.2026 9.93702C18.2026 11.2773 18.3231 14.1594 17.801 15.3682Z"
                                                fill={`${
                                                    isOpen ? "black" : "white"
                                                }`}
                                            />
                                        </svg>
                                    </Link>
                                </div>
                            </div>
                        </motion.div>
                    </div>
                )}
            </AnimatePresence>
        </div>
    );
}
